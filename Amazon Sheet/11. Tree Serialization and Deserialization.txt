--------Tree Serialization and Deserialization--------

class Codec {
public:

    // Encodes a tree to a single string.
    void helper(TreeNode* root,string &s)
    {
        if(!root)
        {
            s+="# ";
            return ;
        }
        s+=to_string(root->val);
        s+=' ';
        helper(root->left,s);
        helper(root->right,s);
    }
    
    string serialize(TreeNode* root) {
        string s;
        helper(root,s);
        return s;
    }

    TreeNode* create(string s,int &i,int n)
    {
        if(s[i]=='#')
        {
            i+=2;
            return NULL;
        }
        string temp;
        while(s[i]!=' ')
        {
            temp.push_back(s[i]);
            i++;
        }
        int x = stoi(temp);
        TreeNode* root = new TreeNode(x);
        i++;
        root->left = create(s,i,n);
        root->right = create(s,i,n);
        return root;
    }

    TreeNode* deserialize(string s) {
        int n = s.length(),i=0;
        return create(s,i,n);
    }
};

// Your Codec object will be instantiated and called as such:
// Codec ser, deser;
// TreeNode* ans = deser.deserialize(ser.serialize(root));